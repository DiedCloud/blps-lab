version: "3.9"

services:
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    expose:
      - 9000
    ports:
      - "9001:9001"
    networks:
      - local
    volumes:
      - minio-storage:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 15s
      retries: 3
    command: ["server", "--console-address", ":9001", "/data/"]

  postgres:
    image: postgres:17.6
    restart: unless-stopped
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - local
    volumes:
      - postgres-storage:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U postgres"]
      interval: 10s
      retries: 5
    command: ["postgres", "-c", "max_prepared_transactions=16"]

  rabbit:
    image: rabbitmq:4.1.3
    restart: unless-stopped
    expose:
      - 5672
    ports:
      - "15672:15672"
    networks:
      - local
    volumes:
      - rabbit-storage:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASS}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      retries: 5

  api:
    build:
      context: .
      dockerfile: services/api/Dockerfile
    image: blps/api:latest
    restart: unless-stopped
    depends_on:
      - postgres
      - minio
      - rabbit
    ports:
      - "8080:8080"
    networks:
      - local
    environment:
      APP_PORT: 8080
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_URL: ${MINIO_URL}
      PG_URL: ${PG_URL}
      PG_SCHEMA: ${PG_SCHEMA}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      RABBIT_URL: ${RABBIT_URL}
      RABBIT_USER: ${RABBIT_USER}
      RABBIT_PATH: ${RABBIT_PATH}
      BANNED_WORDS_PATH: ${BANNED_WORDS_PATH}
      JWT_SECRET: ${JWT_SECRET}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 6

  transcriptions:
    build:
      context: .
      dockerfile: services/transcriptions/Dockerfile
    image: blps/transcriptions:latest
    restart: unless-stopped
    depends_on:
      - postgres
      - minio
      - rabbit
    networks:
      - local
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_URL: ${MINIO_URL}
      PG_URL: ${PG_URL}
      PG_SCHEMA: ${PG_SCHEMA}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      RABBIT_URL: ${RABBIT_URL}
      RABBIT_USER: ${RABBIT_USER}
      RABBIT_PATH: ${RABBIT_PATH}
      BANNED_WORDS_PATH: ${BANNED_WORDS_PATH}
      WHISPER_MODEL_PATH: ${WHISPER_MODEL_PATH}


volumes:
  minio-storage:
  postgres-storage:
  rabbit-storage:

networks:
  local:
